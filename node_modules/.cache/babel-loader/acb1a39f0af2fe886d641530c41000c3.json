{"ast":null,"code":"import axios from 'axios';\nconst URL = 'https://api.openweathermap.org/data/2.5/weather';\nexport const fetchWeather = async query => {\n  const data = await axios.get(URL, {\n    params: {\n      q: query,\n      appid: process.env.API_KEY,\n      units: 'Metric'\n    }\n  }).catch(function (error) {\n    if (error.response) {\n      // Request made and server responded\n      console.log(error.response.data);\n      console.log(error.response.status);\n      console.log(error.response.headers);\n    } else if (error.request) {\n      // The request was made but no response was received\n      console.log(error.request);\n    } else {\n      // Something happened in setting up the request that triggered an Error\n      console.log('Error', error.message);\n    }\n  });\n  return data;\n};","map":{"version":3,"sources":["/home/chir/Desktop/Github/weatherapp/src/api/fetchweather.js"],"names":["axios","URL","fetchWeather","query","data","get","params","q","appid","process","env","API_KEY","units","catch","error","response","console","log","status","headers","request","message"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,MAAMC,GAAG,GAAG,iDAAZ;AAGA,OAAO,MAAMC,YAAY,GAAG,MAAOC,KAAP,IAAe;AAC3C,QAAMC,IAAI,GAAG,MAAMJ,KAAK,CAACK,GAAN,CAAUJ,GAAV,EAAe;AAC9BK,IAAAA,MAAM,EAAC;AACHC,MAAAA,CAAC,EAACJ,KADC;AAEHK,MAAAA,KAAK,EAAEC,OAAO,CAACC,GAAR,CAAYC,OAFhB;AAGHC,MAAAA,KAAK,EAAC;AAHH;AADuB,GAAf,EAOlBC,KAPkB,CAOZ,UAAUC,KAAV,EAAiB;AACxB,QAAIA,KAAK,CAACC,QAAV,EAAoB;AACd;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACC,QAAN,CAAeX,IAA3B;AACAY,MAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACC,QAAN,CAAeG,MAA3B;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACC,QAAN,CAAeI,OAA3B;AACD,KALL,MAKW,IAAIL,KAAK,CAACM,OAAV,EAAmB;AACxB;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACM,OAAlB;AACD,KAHM,MAGA;AACL;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBH,KAAK,CAACO,OAA3B;AACD;AACF,GApBgB,CAAnB;AAqBA,SAAOjB,IAAP;AACC,CAvBM","sourcesContent":["import axios from 'axios';\nconst URL = 'https://api.openweathermap.org/data/2.5/weather';\n\n\nexport const fetchWeather = async (query)=>{\nconst data = await axios.get(URL, {\n    params:{\n        q:query,\n        appid: process.env.API_KEY,\n        units:'Metric'\n    }\n})\n.catch(function (error) {\nif (error.response) {\n      // Request made and server responded\n      console.log(error.response.data);\n      console.log(error.response.status);\n      console.log(error.response.headers);\n    } else if (error.request) {\n      // The request was made but no response was received\n      console.log(error.request);\n    } else {\n      // Something happened in setting up the request that triggered an Error\n      console.log('Error', error.message);\n    }\n  });\nreturn data\n}"]},"metadata":{},"sourceType":"module"}