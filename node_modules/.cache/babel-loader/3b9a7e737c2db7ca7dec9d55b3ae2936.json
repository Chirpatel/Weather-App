{"ast":null,"code":"import _regeneratorRuntime from\"/home/chir/Desktop/Github/weatherapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/chir/Desktop/Github/weatherapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/chir/Desktop/Github/weatherapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import'./App.css';import{fetchWeather}from'./api/fetchweather';var App=function App(){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),query=_useState2[0],setQuery=_useState2[1];var _useState3=useState({}),_useState4=_slicedToArray(_useState3,2),weather=_useState4[0],setWeather=_useState4[1];var search=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e){var data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(e.key==='Enter')){_context.next=7;break;}_context.next=3;return fetchWeather(query);case 3:data=_context.sent;console.log(data);setWeather(data);setQuery('');case 7:case\"end\":return _context.stop();}}},_callee);}));return function search(_x){return _ref.apply(this,arguments);};}();return/*#__PURE__*/React.createElement(\"div\",{className:\"main-container\"},/*#__PURE__*/React.createElement(\"input\",{type:\"text\",className:\"search\",placeholder:\"Search\",value:query,onChange:function onChange(e){return setQuery(e.target.value);},onKeyPress:search}),weather.main&&/*#__PURE__*/React.createElement(\"div\",{className:\"city\"},/*#__PURE__*/React.createElement(\"h2\",{className:\"city-name\"},/*#__PURE__*/React.createElement(\"span\",null,weather.name),/*#__PURE__*/React.createElement(\"sup\",null,weather.sys.country)),/*#__PURE__*/React.createElement(\"div\",{className:\"city-temp\"},Math.round(weather.main.temp),/*#__PURE__*/React.createElement(\"sup\",null,\"\\xB0C\")),/*#__PURE__*/React.createElement(\"div\",{className:\"info\"},/*#__PURE__*/React.createElement(\"img\",{className:\"city-icon\",src:\"https://openweathermap.org/img/wn/\".concat(weather.weather[0].icon,\"@2x.png\"),alt:weather.weather[0].description}),/*#__PURE__*/React.createElement(\"p\",null,weather.weather[0].description))));};export default App;","map":{"version":3,"sources":["/home/chir/Desktop/Github/weatherapp/src/App.js"],"names":["React","useState","fetchWeather","App","query","setQuery","weather","setWeather","search","e","key","data","console","log","target","value","main","name","sys","country","Math","round","temp","icon","description"],"mappings":"8cAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,KAA8B,OAA9B,CACA,MAAO,WAAP,CACA,OAAQC,YAAR,KAA2B,oBAA3B,CACA,GAAMC,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,EAAI,eACcF,QAAQ,CAAC,EAAD,CADtB,wCACLG,KADK,eACEC,QADF,8BAEiBJ,QAAQ,CAAC,EAAD,CAFzB,yCAELK,OAFK,eAEGC,UAFH,eAGZ,GAAMC,CAAAA,MAAM,0FAAG,iBAAOC,CAAP,gIACRA,CAAC,CAACC,GAAF,GAAU,OADF,gDAEYR,CAAAA,YAAY,CAAEE,KAAF,CAFxB,QAEDO,IAFC,eAGPC,OAAO,CAACC,GAAR,CAAYF,IAAZ,EACAJ,UAAU,CAACI,IAAD,CAAV,CACAN,QAAQ,CAAC,EAAD,CAAR,CALO,sDAAH,kBAANG,CAAAA,MAAM,4CAAZ,CAQA,mBACI,2BAAK,SAAS,CAAC,gBAAf,eACI,6BAAO,IAAI,CAAC,MAAZ,CAAmB,SAAS,CAAC,QAA7B,CAAsC,WAAW,CAAE,QAAnD,CAA4D,KAAK,CAAEJ,KAAnE,CAA0E,QAAQ,CAAE,kBAACK,CAAD,QAAOJ,CAAAA,QAAQ,CAACI,CAAC,CAACK,MAAF,CAASC,KAAV,CAAf,EAApF,CAAqH,UAAU,CAAEP,MAAjI,EADJ,CAEKF,OAAO,CAACU,IAAR,eACG,2BAAK,SAAS,CAAC,MAAf,eACI,0BAAI,SAAS,CAAC,WAAd,eACI,gCAAOV,OAAO,CAACW,IAAf,CADJ,cAEI,+BAAMX,OAAO,CAACY,GAAR,CAAYC,OAAlB,CAFJ,CADJ,cAKI,2BAAK,SAAS,CAAC,WAAf,EACKC,IAAI,CAACC,KAAL,CAAWf,OAAO,CAACU,IAAR,CAAaM,IAAxB,CADL,cAEI,uCAFJ,CALJ,cASI,2BAAK,SAAS,CAAC,MAAf,eACI,2BAAK,SAAS,CAAC,WAAf,CAA0B,GAAG,6CAAuChB,OAAO,CAACA,OAAR,CAAgB,CAAhB,EAAmBiB,IAA1D,WAA7B,CAAsG,GAAG,CAAEjB,OAAO,CAACA,OAAR,CAAgB,CAAhB,EAAmBkB,WAA9H,EADJ,cAEI,6BAAIlB,OAAO,CAACA,OAAR,CAAgB,CAAhB,EAAmBkB,WAAvB,CAFJ,CATJ,CAHR,CADJ,CAqBH,CAhCD,CAkCA,cAAerB,CAAAA,GAAf","sourcesContent":["import React, {useState} from 'react';\nimport './App.css';\nimport {fetchWeather} from './api/fetchweather';\nconst App = ()=>{\n    const [query, setQuery] = useState('');\n    const [weather,setWeather] = useState({});\n    const search = async (e)=>{\n        if(e.key === 'Enter'){\n            const data = await fetchWeather (query);\n            console.log(data)\n            setWeather(data);\n            setQuery('');\n        }\n    }\n    return(\n        <div className='main-container'>\n            <input type='text' className=\"search\" placeholder ='Search' value={query} onChange={(e) => setQuery(e.target.value)} onKeyPress={search}/>\n            {weather.main && (\n                <div className='city'>\n                    <h2 className='city-name'>\n                        <span>{weather.name}</span>\n                        <sup>{weather.sys.country}</sup>\n                    </h2>\n                    <div className='city-temp'>\n                        {Math.round(weather.main.temp)}\n                        <sup>&deg;C</sup>\n                    </div>\n                    <div className='info'>\n                        <img className='city-icon'src={`https://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`} alt={weather.weather[0].description} />\n                        <p>{weather.weather[0].description}</p>    \n                    </div>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}